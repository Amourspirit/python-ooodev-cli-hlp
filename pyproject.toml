# Do not use Poetry to build this project directly.
# Instead use python -m app build
# The custom.metadata section is used to set the package name and entry point name.
# python -m app build will use the custom.metadata.pkg_out_name to set the package name
# and the custom.metadata.entry_point_name to set the entry point name.
# The tool.poetry section otherwise should be modified as needed.
#
# After running python -m app build, the normal poetry publish command can be used to publish.
# Don't forget to include a LICENSE file in the project root directory.

[custom.metadata]
pkg_out_name = "ooo_dev_cli_hlp"
entry_point_name = "odh"
build_dir = "build"
build_readme="sphinx_cli_help/README.md"
build_license="LICENSE"

[tool.poetry]
name = "ooo-dev-cli-hlp"
version = "0.0.2"
description = "Command Line Help for my OooDev Project"
authors = [":Barry-Thomas-Paul: Moss <vibrationoflife@protonmail.com>"]
license = "MIT"
readme = "README.md"
# Do not change this next line. Instead change the custom.metadata.pkg_out_name
packages = [{include = "sphinx_cli_help"}]

[tool.poetry.scripts]
#  Don not change this next line. Instead change the custom.metadata.entry_point_name
cli-hlp = "sphinx_cli_help.cli.hlp:main"

[tool.poetry.dependencies]
python = "^3.8"

[tool.poetry.group.dev.dependencies]
sphobjinv = "^2.3.1"
requests = "^2.31.0"
toml = "^0.10.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
extended-select=["ANN", "C4", "N", "SIM", "TCH"]
ignore=["E502"]
show-fixes=true
target="py38"


[[tool.poetry.source]]
name = "pypi-test"
url = "https://test.pypi.org/legacy/"
priority = "supplemental"


[[tool.poetry.source]]
name = "PyPI"
priority = "primary"